{{- if .Capabilities.APIVersions.Has "apps/v1" }}
apiVersion: apps/v1
{{- else }}
apiVersion: apps/v1beta1
{{- end }}
kind: Deployment
metadata:
  name: {{ template "magento.fullname" . }}-httpd
  labels:
    app: {{ template "magento.fullname" . }}-httpd
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.httpd.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.httpd.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.httpd.rollingUpdate.maxSurge }}
  selector:
    matchLabels:
      app: {{ template "magento.fullname" . }}-httpd
  template:
    metadata:
      labels:
        app: {{ template "magento.fullname" . }}-httpd
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
      {{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}  
      {{- end }}
    spec:
      {{- if .Values.pullSecrets }}
      imagePullSecrets:
        {{- range .Values.pullSecrets }}
        - name: {{ . }}
        {{- end}}
      {{- end }}      
      containers:
      - name: {{ template "magento.fullname" . }}-httpd
        image: {{ template "httpd.image" . }}
        imagePullPolicy: {{ .Values.httpd.pullPolicy | quote }}
        lifecycle:
          preStop:
            exec:
              command: {{ .Values.httpd.lifecycle.command }}
        env:
        - name: URL_ARCHIVE
          value: "{{ template "artifactFullUrl" . }}"
        - name: FCGI_HOST_AND_PORT
          value: "{{ template "magento.fullname" . }}-phpfpm:9000"
        ports:
        - containerPort: 80
        {{- if .Values.httpd.livenessProbe.enabled }}
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.httpd.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: {{ .Values.httpd.readinessProbe.path }}
            port: {{ .Values.httpd.readinessProbe.port }}
            httpHeaders:
            - name: Host
              value: {{ .Values.global.host | quote }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        {{- end }}
        volumeMounts:
        {{- if or .Values.efs.enabled .Values.efs.existingPvcName }}
        - mountPath: /efs
          name: efs
        {{- range $index, $val := .Values.efs.containerMountPaths }}
        - mountPath: "/var/www/deploy{{ $val }}"
          subPath: {{ (trimPrefix "/" $val) }}
          name: efs
        {{- end }}
        {{- end }}
        resources:
{{ toYaml .Values.httpd.resources | indent 10 }}
      volumes:
      {{- if .Values.efs.enabled }}
      - name: efs
        persistentVolumeClaim:
          claimName: {{ template "magento.fullname" . }}-efs-pvc
      {{- end }}
      {{- if and .Values.efs.existingPvcName (not .Values.efs.enabled) }}
      - name: efs
        persistentVolumeClaim:
          claimName: {{ .Values.efs.existingPvcName }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.httpd.terminationGracePeriodSeconds | quote }}